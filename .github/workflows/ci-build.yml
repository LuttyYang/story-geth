name: Build geth Binary

on:
  push:
    branches:
      - feat/add-rosetta

permissions:
  id-token: write
  contents: write
  pull-requests: write
  actions: write

jobs:
  # Add timestamp
  Timestamp:
    uses: storyprotocol/gha-workflows/.github/workflows/reusable-timestamp.yml@main

  # Build and upload the geth binary
  build_and_push:
    needs: Timestamp
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          [linux-amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.5

      - name: Extract the version
        run: |
          PARAMS_FILE="./params/version.go"
          VERSION_MAJOR=$(awk -F= '/VersionMajor/ {gsub(/[^0-9]/, "", $2); printf "%s", $2}' $PARAMS_FILE)
          VERSION_MINOR=$(awk -F= '/VersionMinor/ {gsub(/[^0-9]/, "", $2); printf "%s", $2}' $PARAMS_FILE)
          VERSION_PATCH=$(awk -F= '/VersionPatch/ {gsub(/[^0-9]/, "", $2); printf "%s", $2}' $PARAMS_FILE)
          VERSION_META=$(awk -F\" '/VersionMeta/ {print $2; exit}' $PARAMS_FILE)

          # Construct the full version string
          VERSION="$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH"
          if [ "$VERSION_META" != "stable" ]; then
            VERSION+="-${VERSION_META}"
          fi

          echo "Version extracted: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build the geth binary
        run: |
          IFS="-" read -r GOOS GOARCH <<< "${{ matrix.platform }}"
          output_name=./build/bin/geth
          if [ "$GOOS" = "windows" ]; then
            output_name+='.exe'
          fi

          echo "Building for $GOOS/$GOARCH..."
          env GOOS=$GOOS GOARCH=$GOARCH go build -o $output_name ./cmd/geth

          if [ $? -ne 0 ]; then
            echo "Build failed!"
            exit 1
          fi

          if [ ! -f "$output_name" ]; then
            echo "Geth binary not found!"
            exit 1
          fi

          # Apply chmod only for non-windows builds
          if [ "$GOOS" != "windows" ]; then
            chmod +x "$output_name"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: geth-linux-amd64
          path: build/bin/geth
          retention-days: 1
